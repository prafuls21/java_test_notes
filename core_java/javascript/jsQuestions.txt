Trust me in 80% of JavaScript interviews held on these questions You don't need to prepare apart from this.

𝗖𝗼𝗿𝗲 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁:
1. What is the difference between var, let, and const?
2. Explain hoisting in JavaScript with examples.
3. What are closures in JavaScript?
4. Explain the difference between shallow copy and deep copy.
5. What is the difference between == and === in JavaScript?
6. How does the event loop work in JavaScript?
7. What are promises and how do they work?
8. What is async/await, and how is it different from promises?
9. What is memoization, and how can it be implemented in JavaScript?
10. What are higher-order functions, and can you give an example?

𝗢𝗯𝗷𝗲𝗰𝘁-𝗢𝗿𝗶𝗲𝗻𝘁𝗲𝗱 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁 (𝗢𝗢𝗣):
11. What is prototypal inheritance, and how does it work?
12. What is the difference between Object.create() and class-based inheritance?
13. How does this keyword work in JavaScript?
14. What are getter and setter functions in JavaScript?
15. What is the difference between call(), apply(), and bind()?

𝗙𝘂𝗻𝗰𝘁𝗶𝗼𝗻𝗮𝗹 𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗺𝗶𝗻𝗴:
16. What is currying, and how do you implement it?
17. Explain functional programming concepts in JavaScript.
18. What are pure functions, and why are they useful?
19. What is debouncing and throttling? How are they implemented?
20. How do you optimize performance using lazy loading?

𝗔𝘀𝘆𝗻𝗰𝗵𝗿𝗼𝗻𝗼𝘂𝘀 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁:
21. What are Web Workers, and when should you use them?
22. How does setTimeout and setInterval work under the hood?
23. Explain Microtasks and Macrotasks in JavaScript.
24. What is Promise.all(), and how does it differ from Promise.race()?
25. How do you handle errors in async/await?

𝗔𝗱𝘃𝗮𝗻𝗰𝗲𝗱 𝗧𝗼𝗽𝗶𝗰𝘀:
26. How does JavaScript garbage collection work?
27. What are weak references (WeakMap, WeakSet)?
28. Explain Generators and Iterators in JavaScript.
29. What are ES6 Modules, and how are they different from CommonJS?
30. How do you prevent memory leaks in JavaScript?
